// Code generated by ogen, DO NOT EDIT.

package aapi

// Ref: #/components/schemas/Balance
type Balance struct {
	Blockchain        OptString  `json:"blockchain"`
	TokenName         OptString  `json:"tokenName"`
	TokenSymbol       OptString  `json:"tokenSymbol"`
	TokenDecimals     OptFloat64 `json:"tokenDecimals"`
	TokenType         OptString  `json:"tokenType"`
	ContractAddress   OptString  `json:"contractAddress"`
	HolderAddress     OptString  `json:"holderAddress"`
	Balance           OptString  `json:"balance"`
	BalanceRawInteger OptString  `json:"balanceRawInteger"`
	BalanceUsd        OptString  `json:"balanceUsd"`
	TokenPrice        OptString  `json:"tokenPrice"`
	Thumbnail         OptString  `json:"thumbnail"`
}

// GetBlockchain returns the value of Blockchain.
func (s *Balance) GetBlockchain() OptString {
	return s.Blockchain
}

// GetTokenName returns the value of TokenName.
func (s *Balance) GetTokenName() OptString {
	return s.TokenName
}

// GetTokenSymbol returns the value of TokenSymbol.
func (s *Balance) GetTokenSymbol() OptString {
	return s.TokenSymbol
}

// GetTokenDecimals returns the value of TokenDecimals.
func (s *Balance) GetTokenDecimals() OptFloat64 {
	return s.TokenDecimals
}

// GetTokenType returns the value of TokenType.
func (s *Balance) GetTokenType() OptString {
	return s.TokenType
}

// GetContractAddress returns the value of ContractAddress.
func (s *Balance) GetContractAddress() OptString {
	return s.ContractAddress
}

// GetHolderAddress returns the value of HolderAddress.
func (s *Balance) GetHolderAddress() OptString {
	return s.HolderAddress
}

// GetBalance returns the value of Balance.
func (s *Balance) GetBalance() OptString {
	return s.Balance
}

// GetBalanceRawInteger returns the value of BalanceRawInteger.
func (s *Balance) GetBalanceRawInteger() OptString {
	return s.BalanceRawInteger
}

// GetBalanceUsd returns the value of BalanceUsd.
func (s *Balance) GetBalanceUsd() OptString {
	return s.BalanceUsd
}

// GetTokenPrice returns the value of TokenPrice.
func (s *Balance) GetTokenPrice() OptString {
	return s.TokenPrice
}

// GetThumbnail returns the value of Thumbnail.
func (s *Balance) GetThumbnail() OptString {
	return s.Thumbnail
}

// SetBlockchain sets the value of Blockchain.
func (s *Balance) SetBlockchain(val OptString) {
	s.Blockchain = val
}

// SetTokenName sets the value of TokenName.
func (s *Balance) SetTokenName(val OptString) {
	s.TokenName = val
}

// SetTokenSymbol sets the value of TokenSymbol.
func (s *Balance) SetTokenSymbol(val OptString) {
	s.TokenSymbol = val
}

// SetTokenDecimals sets the value of TokenDecimals.
func (s *Balance) SetTokenDecimals(val OptFloat64) {
	s.TokenDecimals = val
}

// SetTokenType sets the value of TokenType.
func (s *Balance) SetTokenType(val OptString) {
	s.TokenType = val
}

// SetContractAddress sets the value of ContractAddress.
func (s *Balance) SetContractAddress(val OptString) {
	s.ContractAddress = val
}

// SetHolderAddress sets the value of HolderAddress.
func (s *Balance) SetHolderAddress(val OptString) {
	s.HolderAddress = val
}

// SetBalance sets the value of Balance.
func (s *Balance) SetBalance(val OptString) {
	s.Balance = val
}

// SetBalanceRawInteger sets the value of BalanceRawInteger.
func (s *Balance) SetBalanceRawInteger(val OptString) {
	s.BalanceRawInteger = val
}

// SetBalanceUsd sets the value of BalanceUsd.
func (s *Balance) SetBalanceUsd(val OptString) {
	s.BalanceUsd = val
}

// SetTokenPrice sets the value of TokenPrice.
func (s *Balance) SetTokenPrice(val OptString) {
	s.TokenPrice = val
}

// SetThumbnail sets the value of Thumbnail.
func (s *Balance) SetThumbnail(val OptString) {
	s.Thumbnail = val
}

// Ref: #/components/schemas/BalancesReply
type BalancesReply struct {
	NextPageToken   OptString  `json:"nextPageToken"`
	TotalBalanceUsd OptString  `json:"totalBalanceUsd"`
	TotalCount      OptFloat64 `json:"totalCount"`
	Assets          []Balance  `json:"assets"`
	BlockHeight     OptFloat64 `json:"blockHeight"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *BalancesReply) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetTotalBalanceUsd returns the value of TotalBalanceUsd.
func (s *BalancesReply) GetTotalBalanceUsd() OptString {
	return s.TotalBalanceUsd
}

// GetTotalCount returns the value of TotalCount.
func (s *BalancesReply) GetTotalCount() OptFloat64 {
	return s.TotalCount
}

// GetAssets returns the value of Assets.
func (s *BalancesReply) GetAssets() []Balance {
	return s.Assets
}

// GetBlockHeight returns the value of BlockHeight.
func (s *BalancesReply) GetBlockHeight() OptFloat64 {
	return s.BlockHeight
}

// SetNextPageToken sets the value of NextPageToken.
func (s *BalancesReply) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetTotalBalanceUsd sets the value of TotalBalanceUsd.
func (s *BalancesReply) SetTotalBalanceUsd(val OptString) {
	s.TotalBalanceUsd = val
}

// SetTotalCount sets the value of TotalCount.
func (s *BalancesReply) SetTotalCount(val OptFloat64) {
	s.TotalCount = val
}

// SetAssets sets the value of Assets.
func (s *BalancesReply) SetAssets(val []Balance) {
	s.Assets = val
}

// SetBlockHeight sets the value of BlockHeight.
func (s *BalancesReply) SetBlockHeight(val OptFloat64) {
	s.BlockHeight = val
}

// Ref: #/components/schemas/BalancesRequest
type BalancesRequest struct {
	WalletAddress   string     `json:"walletAddress"`
	Blockchain      []string   `json:"blockchain"`
	BlockHeight     OptFloat64 `json:"blockHeight"`
	OnlyWhitelisted OptBool    `json:"onlyWhitelisted"`
	NativeFirst     OptBool    `json:"nativeFirst"`
	PageSize        OptString  `json:"pageSize"`
	PageToken       OptString  `json:"pageToken"`
}

// GetWalletAddress returns the value of WalletAddress.
func (s *BalancesRequest) GetWalletAddress() string {
	return s.WalletAddress
}

// GetBlockchain returns the value of Blockchain.
func (s *BalancesRequest) GetBlockchain() []string {
	return s.Blockchain
}

// GetBlockHeight returns the value of BlockHeight.
func (s *BalancesRequest) GetBlockHeight() OptFloat64 {
	return s.BlockHeight
}

// GetOnlyWhitelisted returns the value of OnlyWhitelisted.
func (s *BalancesRequest) GetOnlyWhitelisted() OptBool {
	return s.OnlyWhitelisted
}

// GetNativeFirst returns the value of NativeFirst.
func (s *BalancesRequest) GetNativeFirst() OptBool {
	return s.NativeFirst
}

// GetPageSize returns the value of PageSize.
func (s *BalancesRequest) GetPageSize() OptString {
	return s.PageSize
}

// GetPageToken returns the value of PageToken.
func (s *BalancesRequest) GetPageToken() OptString {
	return s.PageToken
}

// SetWalletAddress sets the value of WalletAddress.
func (s *BalancesRequest) SetWalletAddress(val string) {
	s.WalletAddress = val
}

// SetBlockchain sets the value of Blockchain.
func (s *BalancesRequest) SetBlockchain(val []string) {
	s.Blockchain = val
}

// SetBlockHeight sets the value of BlockHeight.
func (s *BalancesRequest) SetBlockHeight(val OptFloat64) {
	s.BlockHeight = val
}

// SetOnlyWhitelisted sets the value of OnlyWhitelisted.
func (s *BalancesRequest) SetOnlyWhitelisted(val OptBool) {
	s.OnlyWhitelisted = val
}

// SetNativeFirst sets the value of NativeFirst.
func (s *BalancesRequest) SetNativeFirst(val OptBool) {
	s.NativeFirst = val
}

// SetPageSize sets the value of PageSize.
func (s *BalancesRequest) SetPageSize(val OptString) {
	s.PageSize = val
}

// SetPageToken sets the value of PageToken.
func (s *BalancesRequest) SetPageToken(val OptString) {
	s.PageToken = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
